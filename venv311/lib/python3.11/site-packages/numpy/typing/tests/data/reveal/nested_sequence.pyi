<<<<<<< HEAD:venv311/lib/python3.11/site-packages/numpy/typing/tests/data/reveal/nested_sequence.pyi
=======
import sys
>>>>>>> dd7ecbd (added imagen images):backend/venv/lib/python3.9/site-packages/numpy/typing/tests/data/reveal/nested_sequence.pyi
from collections.abc import Sequence
from typing import Any

from numpy._typing import _NestedSequence

<<<<<<< HEAD:venv311/lib/python3.11/site-packages/numpy/typing/tests/data/reveal/nested_sequence.pyi
from typing_extensions import assert_type
=======
if sys.version_info >= (3, 11):
    from typing import assert_type
else:
    from typing_extensions import assert_type
>>>>>>> dd7ecbd (added imagen images):backend/venv/lib/python3.9/site-packages/numpy/typing/tests/data/reveal/nested_sequence.pyi

a: Sequence[int]
b: Sequence[Sequence[int]]
c: Sequence[Sequence[Sequence[int]]]
d: Sequence[Sequence[Sequence[Sequence[int]]]]
e: Sequence[bool]
f: tuple[int, ...]
g: list[int]
h: Sequence[Any]

def func(a: _NestedSequence[int]) -> None:
    ...

assert_type(func(a), None)
assert_type(func(b), None)
assert_type(func(c), None)
assert_type(func(d), None)
assert_type(func(e), None)
assert_type(func(f), None)
assert_type(func(g), None)
assert_type(func(h), None)
assert_type(func(range(15)), None)
