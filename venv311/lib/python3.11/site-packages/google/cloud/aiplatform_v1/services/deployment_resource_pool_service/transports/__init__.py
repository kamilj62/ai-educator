# -*- coding: utf-8 -*-
<<<<<<< HEAD:venv311/lib/python3.11/site-packages/google/cloud/aiplatform_v1/services/deployment_resource_pool_service/transports/__init__.py
# Copyright 2023 Google LLC
=======
# Copyright 2024 Google LLC
>>>>>>> dd7ecbd (added imagen images):backend/venv/lib/python3.9/site-packages/google/cloud/aiplatform_v1/services/deployment_resource_pool_service/transports/__init__.py
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
from collections import OrderedDict
<<<<<<< HEAD:venv311/lib/python3.11/site-packages/google/cloud/aiplatform_v1/services/deployment_resource_pool_service/transports/__init__.py
from typing import Dict, Type
=======
from typing import Dict, Type, Tuple
>>>>>>> dd7ecbd (added imagen images):backend/venv/lib/python3.9/site-packages/google/cloud/aiplatform_v1/services/deployment_resource_pool_service/transports/__init__.py

from .base import DeploymentResourcePoolServiceTransport
from .grpc import DeploymentResourcePoolServiceGrpcTransport
from .grpc_asyncio import DeploymentResourcePoolServiceGrpcAsyncIOTransport
<<<<<<< HEAD:venv311/lib/python3.11/site-packages/google/cloud/aiplatform_v1/services/deployment_resource_pool_service/transports/__init__.py
=======
from .rest import DeploymentResourcePoolServiceRestTransport
from .rest import DeploymentResourcePoolServiceRestInterceptor

ASYNC_REST_CLASSES: Tuple[str, ...]
try:
    from .rest_asyncio import AsyncDeploymentResourcePoolServiceRestTransport
    from .rest_asyncio import AsyncDeploymentResourcePoolServiceRestInterceptor

    ASYNC_REST_CLASSES = (
        "AsyncDeploymentResourcePoolServiceRestTransport",
        "AsyncDeploymentResourcePoolServiceRestInterceptor",
    )
    HAS_REST_ASYNC = True
except ImportError:  # pragma: NO COVER
    ASYNC_REST_CLASSES = ()
    HAS_REST_ASYNC = False
>>>>>>> dd7ecbd (added imagen images):backend/venv/lib/python3.9/site-packages/google/cloud/aiplatform_v1/services/deployment_resource_pool_service/transports/__init__.py


# Compile a registry of transports.
_transport_registry = (
    OrderedDict()
)  # type: Dict[str, Type[DeploymentResourcePoolServiceTransport]]
_transport_registry["grpc"] = DeploymentResourcePoolServiceGrpcTransport
_transport_registry["grpc_asyncio"] = DeploymentResourcePoolServiceGrpcAsyncIOTransport
<<<<<<< HEAD:venv311/lib/python3.11/site-packages/google/cloud/aiplatform_v1/services/deployment_resource_pool_service/transports/__init__.py
=======
_transport_registry["rest"] = DeploymentResourcePoolServiceRestTransport
if HAS_REST_ASYNC:  # pragma: NO COVER
    _transport_registry[
        "rest_asyncio"
    ] = AsyncDeploymentResourcePoolServiceRestTransport
>>>>>>> dd7ecbd (added imagen images):backend/venv/lib/python3.9/site-packages/google/cloud/aiplatform_v1/services/deployment_resource_pool_service/transports/__init__.py

__all__ = (
    "DeploymentResourcePoolServiceTransport",
    "DeploymentResourcePoolServiceGrpcTransport",
    "DeploymentResourcePoolServiceGrpcAsyncIOTransport",
<<<<<<< HEAD:venv311/lib/python3.11/site-packages/google/cloud/aiplatform_v1/services/deployment_resource_pool_service/transports/__init__.py
)
=======
    "DeploymentResourcePoolServiceRestTransport",
    "DeploymentResourcePoolServiceRestInterceptor",
) + ASYNC_REST_CLASSES
>>>>>>> dd7ecbd (added imagen images):backend/venv/lib/python3.9/site-packages/google/cloud/aiplatform_v1/services/deployment_resource_pool_service/transports/__init__.py
